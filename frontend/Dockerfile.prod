# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY . .

# Build the Angular app for production
RUN npm run build -- --configuration=production

# Production stage
FROM nginx:alpine

# Copy custom nginx config if exists
COPY --from=builder /app/nginx.conf /etc/nginx/nginx.conf 2>/dev/null || true

# Copy built app to nginx html directory
COPY --from=builder /app/dist/frontend/browser /usr/share/nginx/html

# Create a default nginx config if custom one doesn't exist
RUN if [ ! -f /etc/nginx/nginx.conf ]; then \
    echo 'events { worker_connections 1024; }' > /etc/nginx/nginx.conf && \
    echo 'http {' >> /etc/nginx/nginx.conf && \
    echo '  include /etc/nginx/mime.types;' >> /etc/nginx/nginx.conf && \
    echo '  server {' >> /etc/nginx/nginx.conf && \
    echo '    listen 80;' >> /etc/nginx/nginx.conf && \
    echo '    location / {' >> /etc/nginx/nginx.conf && \
    echo '      root /usr/share/nginx/html;' >> /etc/nginx/nginx.conf && \
    echo '      index index.html;' >> /etc/nginx/nginx.conf && \
    echo '      try_files $uri $uri/ /index.html;' >> /etc/nginx/nginx.conf && \
    echo '    }' >> /etc/nginx/nginx.conf && \
    echo '    location /api {' >> /etc/nginx/nginx.conf && \
    echo '      proxy_pass http://backend:3000;' >> /etc/nginx/nginx.conf && \
    echo '      proxy_http_version 1.1;' >> /etc/nginx/nginx.conf && \
    echo '      proxy_set_header Upgrade $http_upgrade;' >> /etc/nginx/nginx.conf && \
    echo '      proxy_set_header Connection "upgrade";' >> /etc/nginx/nginx.conf && \
    echo '      proxy_set_header Host $host;' >> /etc/nginx/nginx.conf && \
    echo '      proxy_set_header X-Real-IP $remote_addr;' >> /etc/nginx/nginx.conf && \
    echo '      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;' >> /etc/nginx/nginx.conf && \
    echo '      proxy_set_header X-Forwarded-Proto $scheme;' >> /etc/nginx/nginx.conf && \
    echo '    }' >> /etc/nginx/nginx.conf && \
    echo '  }' >> /etc/nginx/nginx.conf && \
    echo '}' >> /etc/nginx/nginx.conf; \
    fi

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]